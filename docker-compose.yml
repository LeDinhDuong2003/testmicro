version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: mysql3
    environment:
      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: booking_db
#      MYSQL_USER: userx
#      MYSQL_PASSWORD: password
    ports:
      - "3309:3306"
    volumes:
      - mysql_data:/var/lib/mysql-3
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Eureka Service Discovery
  eureka-server:
    build:
      context: ./gateway/eureka_server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # API Gateway
  api-gateway:
    build:
      context: ./gateway/api_gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Movie Service
  movie-service:
    build:
      context: ./services/movie_service
    container_name: movie-service
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 150s

  # Seat Service
  seat-service:
    build:
      context: ./services/seat_service
    container_name: seat-service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
#      movie-service:
#        condition: service_healthy
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 270s

  # Booking Service
  booking-service:
    build:
      context: ./services/booking_service
    container_name: booking-service
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
#      movie-service:
#        condition: service_healthy
#      seat-service:
#        condition: service_healthy
    networks:
      - booking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 390s

networks:
  booking-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data: