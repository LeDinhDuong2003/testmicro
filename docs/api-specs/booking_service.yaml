openapi: 3.0.0
info:
  title: Booking Service API
  description: API cho dịch vụ đặt vé xem phim
  version: 1.0.0
servers:
  - url: http://localhost:8083
    description: Local Development Server
  - url: http://booking-service:8083
    description: Docker Development Environment

tags:
  - name: bookings
    description: Quản lý đặt vé
  - name: payment
    description: Xử lý thanh toán

paths:
  /api/bookings:
    post:
      summary: Tạo đơn đặt vé mới
      tags:
        - bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequestDTO'
      responses:
        '200':
          description: Đơn đặt vé được tạo thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponseDTO'
        '400':
          description: Dữ liệu không hợp lệ hoặc có lỗi khi đặt vé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Lỗi khi giao tiếp với các service khác
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/bookings/{id}:
    get:
      summary: Lấy thông tin chi tiết của một đơn đặt vé
      tags:
        - bookings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Thông tin đơn đặt vé được trả về thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponseDTO'
        '404':
          description: Không tìm thấy đơn đặt vé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Lỗi khi giao tiếp với các service khác
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Hủy đơn đặt vé
      tags:
        - bookings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Đơn đặt vé được hủy thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Booking cancelled successfully"
        '400':
          description: Không thể hủy đơn đặt vé (ví dụ đã thanh toán)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Không tìm thấy đơn đặt vé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Lỗi khi giao tiếp với các service khác
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/bookings/email/{email}:
    get:
      summary: Lấy danh sách đơn đặt vé theo email
      tags:
        - bookings
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Danh sách đơn đặt vé được trả về thành công
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookingResponseDTO'
        '503':
          description: Lỗi khi giao tiếp với các service khác
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/payment/{bookingId}:
    post:
      summary: Xử lý thanh toán cho đơn đặt vé
      tags:
        - payment
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Thanh toán thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Payment processed successfully"
                  booking:
                    $ref: '#/components/schemas/BookingResponseDTO'
        '400':
          description: Thanh toán thất bại
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Payment failed"
        '404':
          description: Không tìm thấy đơn đặt vé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Lỗi khi giao tiếp với các service khác
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    BookingRequestDTO:
      type: object
      required:
        - showtimeId
        - seatNumber
        - customerName
        - email
      properties:
        showtimeId:
          type: integer
          format: int64
        seatNumber:
          type: string
          example: "A1"
        customerName:
          type: string
        email:
          type: string
          format: email

    BookingResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        showtimeId:
          type: integer
          format: int64
        seatNumber:
          type: string
          example: "A1"
        customerName:
          type: string
        email:
          type: string
          format: email
        paid:
          type: boolean
        movieTitle:
          type: string
        theater:
          type: string
        showtimeDate:
          type: string
          format: date-time
        paymentUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Booking:
      type: object
      properties:
        id:
          type: integer
          format: int64
        seatNumber:
          type: string
          example: "A1"
        customerName:
          type: string
        email:
          type: string
          format: email
        paid:
          type: boolean
        showtimeId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Booking Failed"
        message:
          type: string
          example: "Seat is already reserved"

    MovieDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string

    ShowtimeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        time:
          type: string
          format: date-time
        theater:
          type: string
        movieId:
          type: integer
          format: int64
        movieTitle:
          type: string

    SeatDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        seatNumber:
          type: string
          example: "A1"
        reserved:
          type: boolean
        showtimeId:
          type: integer
          format: int64